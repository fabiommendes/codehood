# generated by datamodel-codegen:
#   filename:  base-question.yml
#   timestamp: 2025-04-18T16:01:42+00:00

from __future__ import annotations

from enum import Enum
from typing import Any, List

from pydantic import BaseModel, Field


class TextFormat(Enum):
    """
    How to interpret textual strings.
    """
    MD = 'md'
    TEXT = 'text'


class MediaType(Enum):
    """
    The type of the media asset.
    """
    IMAGE = 'image'
    VIDEO = 'video'
    AUDIO = 'audio'


class MediaObject(BaseModel):
    """
    A media object like an image or a video that can be referenced in the question.
    """
    id: str = Field(..., min_length=1)
    """
    An identifier for the media object.
    """
    type: MediaType
    url: str = Field(..., min_length=1)
    """
    The URL for the media asset.
    """
    caption: str | None = ''
    """
    An optional caption for the media object.
    """


class Footnote(BaseModel):
    """
    A footnote is a reference to a note at the bottom of the page. It is used to provide  additional information about a word or phrase in the text. They can be referenced in the preamble, epiloque or in the main text of the question.
    """
    id: str = Field(..., min_length=1)
    """
    An identifier for the footnote.
    """
    text: str = Field(..., min_length=1)
    """
    The text associated with the footnote.
    """


class GradeRange(BaseModel):
    """
    Describes how the question should be graded. Usually grades are represented as a percentage between 0 and 100. In order to award different points to different questions, use the weight field instead of tweaking this field.
    """
    min: float | Any
    """
    The minimum value for the grade. If the computed grade is bellow this value, the  final value is truncated. Null represents an unbounded value.
    """
    max: float | Any
    """
    The maximum value for the grade. If the computed grade is above this value, the final  value is truncated. Null represents an unbounded value.
    """


class BaseQuestion(BaseModel):
    """
    Common fields for all question types. This is a base schema and should not be instanticiated directly since it does not correspond to any concrete question type.
    """
    id: str = Field(..., min_length=1)
    """
    A unique identifier for the question in the set.
    """
    type: str
    """
    Discriminator for the question type.
    """
    title: str | None = Field(default=None, min_length=1)
    """
    The question title. It is used to display a friendly name in the user interface. It is  different from the ID in that it is a human-readable name which is intended for displaying to the user.
    """
    stem: str = Field(..., examples=['Select the correct answer.', 'How much is 2 + 2?', 'The capital of France is...'], min_length=1)
    """
    The main command for the question. It should be short and objective and  fits in a single paragraph. It can be written as a question or an incomplete sentence. Longer paragraphs of introductory text can be added in the preamble.
    """
    format: TextFormat | None = TextFormat.MD
    weight: float | None = 100
    """
    The weight of the question in points. It is used to compute the final grade. The default  value is 100. The weight is multiplied by the grade of the question to compute the final  grade.
    """
    preamble: str | None = ''
    """
    An optional text introducing the subject matter of the question.
    """
    epilogue: str | None = ''
    """
    An optional text that is shown after the question.
    """
    comment: str | None = ''
    """
    An optional text that is shown only to the teacher.
    """
    grade_range: GradeRange | None = Field(default=None, alias='grade-range')
    footnotes: List[Footnote] | None = []
    """
    A list of footnotes declared in the preamble, epiloque or in the main text of the question.
    """
    media: List[MediaObject] | None = []
    """
    A list of media objects like images and videos that can be referenced in the question.
    """
